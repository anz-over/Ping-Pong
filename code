from pygame import *
from random import *
mixer.init()

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed, size_x, size_y):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player_1(GameSprite):
    def update(self):  
        keys_pressed = key.get_pressed()
        if keys_pressed[K_w] and self.rect.y >= 85:
            self.rect.y -= self.speed
        if keys_pressed[K_s] and self.rect.y <= 350:
            self.rect.y += self.speed

class Player_2(GameSprite):
    def update(self):  
        keys_pressed = key.get_pressed()
        if keys_pressed[K_UP] and self.rect.y >= 85:
            self.rect.y -= self.speed
        if keys_pressed[K_DOWN] and self.rect.y <= 350:
            self.rect.y += self.speed

class Ball(GameSprite):
    def __init__(self, player_image, player_x, player_y, player_speed, size_x, size_y, deriction, number, turbo):
        GameSprite.__init__(self, player_image, player_x, player_y, player_speed, size_x, size_y)
        self.deriction = deriction
        self.number = number
        self.turbo = turbo
    def update(self):
        if self.deriction == 'right':
            self.rect.x += self.speed
        if self.deriction == "left":
            self.rect.x -= self.speed

        if self.rect.y <= 50:
            self.number = 0
            self.turbo += 1
        if self.rect.y >= 470:
            self.number = 1
            self.turbo += 1  
        
        if self.number == 0:
            self.rect.y += self.speed
        if self.number == 1:
            self.rect.y -= self.speed

        if self.turbo == 5:
            self.speed += 1
            self.turbo = 0
        
    def revers_1(self):
        self.deriction = 'right'
        self.turbo += 1
    def revers_2(self):
        self.deriction = "left"
        self.turbo += 1
    
    def wall_1(self):
        if self.rect.x <= 0:
            return True
    def wall_2(self):
        if self.rect.x >= 700:
            return True      

win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption("ping-pong")

number_y = randint(0, 1)
number_x = randint(0, 1)
if number_x == 0:
    deriction_x = 'right'
if number_x == 1:
    deriction_x = 'left'

background = transform.scale(image.load("table.png"), (win_width, win_height))
racket_1 = Player_1("ping-pong-racket_1.png", 10, win_height - 100, 50, 100, 100)
racket_2 = Player_2("ping-pong-racket_2.png", 590, win_height - 100, 50, 100, 100)
racket_1_finish = Player_1("ping-pong-racket_1.png", 325, 215, 50, 100, 100)
racket_2_finish = Player_2("ping-pong-racket_2.png", 275, 215, 50, 100, 100)
ball = Ball('ball.png', 350, 250, 10, 25, 25, deriction_x, number_y, 0)

font.init()
font2 = font.SysFont('Arial', 30)


score_1 = 0
score_2 = 0    
lose_1 = font2.render("YOU LOSE NUMBER 1!", True, (255, 255, 255))
lose_2 = font2.render("YOU LOSE NUMBER 2!", True, (255, 255, 255))
start_time = time.get_ticks()
time_duration = 750
game = True
finish = False
while game:
    for e in event.get():
        current_time = time.get_ticks()  
        if e.type == QUIT:
            game = False

    if finish == False:
        window.blit(background, (0, 0))
        racket_1.reset()
        racket_2.reset()
        ball.reset()
        draw.rect(window, (180, 0, 0), (0, 0, 350, 45))
        draw.rect(window, (0, 0, 180), (350, 0, 350, 45))
    
        racket_1.update()
        racket_2.update()
        ball.update()

        text_1 = font2.render("Счет №1: " + str(score_1), 1, (255, 255, 255))
        text_2 = font2.render(str(score_2) + " :Счет №2", 1, (255, 255, 255))
        window.blit(text_1, (0, 0))
        window.blit(text_2, (565, 0))

        if sprite.collide_rect(racket_1, ball):
            ball.revers_1()
        if sprite.collide_rect(racket_2, ball):
            ball.revers_2()  
        
        if ball.wall_1() == True:
            score_2 += 1
            if score_2 == 5:
                finish = True
                draw.rect(window, (200, 0, 0), (380, 225, 125, 60))
                draw.rect(window, (0, 0, 200), (200, 225, 125, 60))
                racket_1_finish.reset()
                racket_2_finish.reset()
                window.blit(lose_1, (220, 235))
            if score_2 < 5:
                number_y = randint(0, 1)
                number_x = randint(0, 1)
                if number_x == 0:
                    deriction_x = 'right'
                if number_x == 1:
                    deriction_x = 'left'
                ball = Ball('ball.png', 350, 250, 10, 25, 25, deriction_x, number_y, 0)
                ball.reset()
            
        if ball.wall_2() == True:
            score_1 += 1
            if score_1 == 5:
                finish = True
                draw.rect(window, (200, 0, 0), (380, 225, 125, 60))
                draw.rect(window, (0, 0, 200), (200, 225, 125, 60))
                racket_1_finish.reset()
                racket_2_finish.reset()
                window.blit(lose_2, (220, 235))
            if score_1 < 5:
                number_y = randint(0, 1)
                number_x = randint(0, 1)
                if number_x == 0:
                    deriction_x = 'right'
                if number_x == 1:
                    deriction_x = 'left'
                ball = Ball('ball.png', 350, 250, 10, 25, 25, deriction_x, number_y, 0)
                ball.reset()

        display.update()
    time.delay(50)
